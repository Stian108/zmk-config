/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        ZMK_MACRO(ud_grv,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp LS(EQUAL)>, <&kp SPACE>;
        )

        ZMK_MACRO(ud_acut,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp RA(EQUAL)>, <&kp SPACE>;
        )

        ZMK_MACRO(ud_circ,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp LS(RBKT)>, <&kp SPACE>;
        )

        ZMK_MACRO(ud_tild,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp RA(RBKT)>, <&kp SPACE>;
        )
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC   &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                      &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &kp BSPC
&kp TAB   &kp Q  &kp W    &kp F    &kp P     &kp B                       &kp J  &kp L     &kp U     &kp Y    &kp SEMI &kp LBKT
&kp BSPC  &kp A  &kp R    &kp S    &kp T     &kp G                       &kp M  &kp N     &kp E     &kp I    &kp O    &kp SQT
&kp LSHFT &kp Z  &kp X    &kp C    &kp D     &kp V  &kp C_MUTE &kp C_PP  &kp K  &kp H     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LGUI &kp LALT &kp LCTRL &mo 1  &kp SPACE    &kp RET &mo 2  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_NEXT C_PREV>;
        };

        lower_layer {
            bindings = <
&trans    &kp F1     &kp F2     &kp F3       &kp F4      &kp F5                    &kp F6     &kp F7     &kp F8              &kp F9              &kp F10       &trans
&trans    &kp F11    &kp F12    &kp F13      &kp F14     &kp F15                   &kp EQUAL  &kp LS(N7) &ud_grv             &ud_acut            &kp LS(N0)    &kp GRAVE
&trans    &kp LS(N1) &kp RA(N2) &kp LS(N3)   &kp RA(N4)  &kp LS(N5)                &ud_circ   &kp LS(N6) &kp LS(NON_US_HASH) &kp LS(N8)          &kp LS(N9)    &kp NON_US_HASH
&trans    &ud_tild   &kp LS(N2) &kp MINUS    &kp RA(N7)  &kp RA(N0)  &trans &trans &kp RA(N8) &kp RA(N9) &kp NON_US_BSLH     &kp LS(NON_US_BSLH) &kp LS(MINUS) &trans
                    &trans    &trans      &trans    &trans    &trans &trans &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_NEXT C_PREV>;
        };

        raise_layer {
            bindings = <
&trans     &trans      &trans     &trans       &trans       &trans                   &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS     &kp PSCRN  &kp K_CMENU  &trans       &trans                   &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
&trans     &kp LALT    &kp LCTRL  &kp LSHFT    &trans       &kp CLCK                 &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO  &kp K_CUT  &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans  &trans    &trans    &trans   &trans    &trans  &trans
                       &trans     &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_NEXT C_PREV>;
        };

        adjust_layer {
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &kp F16   &kp F17   &kp F18  &kp F19   &kp F20 &trans
&trans     &out OUT_USB &out OUT_BLE &trans       &trans       &trans                   &kp F21   &kp 22    &kp F23  &kp F24   &trans  &trans
&trans     &trans       &trans       &trans       &trans       &trans                   &trans    &trans    &trans   &trans    &trans  &trans
&trans     &trans       &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans    &trans  &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_NEXT C_PREV>;
        };
    };
};
